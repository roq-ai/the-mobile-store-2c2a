generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  address     String?     @db.VarChar(255)
  city        String?     @db.VarChar(255)
  state       String?     @db.VarChar(255)
  zip_code    String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory   inventory[]
  product     product[]
}

model inventory {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id   String   @db.Uuid
  quantity     Int
  last_updated DateTime @db.Timestamp(6)
  business_id  String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  business     business @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product      product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invoice {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  payment_method  String?  @db.VarChar(255)
  discount_amount Float?
  invoice_status  String?  @db.VarChar(255)
}

model order {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String    @db.Uuid
  product_id    String    @db.Uuid
  quantity      Int
  total_price   Int
  order_date    DateTime  @db.Timestamp(6)
  delivery_date DateTime? @db.Timestamp(6)
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  product       product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String      @db.VarChar(255)
  description String?     @db.VarChar(255)
  price       Int
  quantity    Int
  category    String      @db.VarChar(255)
  business_id String      @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  inventory   inventory[]
  order       order[]
  business    business    @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review      review[]
}

model review {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  product_id  String   @db.Uuid
  rating      Int
  comment     String?  @db.VarChar(255)
  review_date DateTime @db.Timestamp(6)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  product     product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
  order       order[]
  review      review[]
}
